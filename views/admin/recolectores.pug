extends layout

block content
  link(href="/stylesheets/admin/custom.css" rel="stylesheet")
  script(src="https://code.jquery.com/jquery-2.2.4.js", integrity="sha256-iT6Q9iMJYuQiMWNd9lDyBUStIq/8PuOW33aOqmvFpqI=", crossorigin="anonymous")
  .breadcrumbs
    .col-sm-4
      .page-header.float-left
        .page-title
          h1 Recolectores
    .col-sm-8
      .page-header.float-right
        .page-title
          ol.breadcrumb.text-right
            li.active Recolectores
  .content.mt-3
    .col-sm-12
      table(class="admin-index-table")
        thead(style={'text-align': 'center'})
          tr: th(colspan='6') Lista de Recolectores
            button.btn.btn-primary(type='button', data-toggle="modal", data-target='#recolectorModal', style={'float': 'right'}) Agregar Nuevo
          tr
            th Id
            th Nombre
            th Apellidos
            th Email
            th Fecha de Registro
            th Acciones
        tbody
          each val in recolectores 
            tr(id=`rec-${val.id}`, data-id=`${val.id}`)
              td#rec_id= val.id
              td#rec_first_name.canBeEditable= val.first_name
              td#rec_last_name.canBeEditable= val.last_name
              td#rec_email.canBeEditable= val.email
              td= val.creation_date
              td
                a.recDelete(data-id=`${val.id}`, rel="nofollow")
                  i.fa.fa-trash(style={'color': '#dc3545', 'float':'left', 'padding-left': '10px'})
                a.recEdit(data-id=`${val.id}`)
                  i.fa.fa-pencil(style={'color': '#007bff', 'float':'right', 'padding-right': '10px'})


  link(rel="stylesheet" type="text/css" href="/stylesheets/login.css")
  #recolectorModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='exampleModalLabel', aria-hidden='true')
    .modal-dialog(role='document')
      .modal-content
        .modal-header
          h5#exampleModalLabel.modal-title Agregar un nuevo recolector
          button.close(type='button', data-dismiss='modal', aria-label='Close')
            span(aria-hidden='true') ×
        .modal-body
          .form(style={'width': '470px', 'margin': '0px', 'max-width': '500px'})
            form.register-form(method='POST' action='/register')
              input#firstName(type="text" name="first_name" placeholder="Nombre" required)
              input#lastName(type="text" name="last_name" placeholder="Apellidos" required)
              input#email(type="text" name="email" placeholder="Correo electrònico" required)
  
        .modal-footer
          button.btn.btn-secondary(type='button', data-dismiss='modal') Cerrar
          button#registerRecollector.btn.btn-primary(type='button') Guardar recolector
  script(type='text/javascript').
    $('#registerRecollector').click(() => {
      let email = $("#email").val();
      let firstName = $("#firstName").val();
      let lastName = $("#lastName").val();

      let recollector = { first_name: firstName, last_name: lastName, email: email }

      $.post("recolectores", recollector)
        .always(() => {
          window.location.reload();
        })
    })

    $('.recDelete').click(() => {
      let id = event.target.parentElement.dataset.id;
      let accepted;
      accepted = confirm("Estas seguro de desear borrar a este recolector?")
      if (accepted) {
        $.ajax({
          url: `recolector/${id}`,
          type: 'DELETE',
          success: function() {
            $(`#rec-${id}`).hide();
          }
        })
      }
    })

    let editId;
    let isEditing;

    $('.recEdit').click(()=> {
      if (isEditing) {
        removeEditing();
        let id = event.target.parentElement.dataset.id;
        if (id !== editId) {
          addEditing()
        }
      } else {
        addEditing()
      }
    })

    function removeEditing() {
      isEditing = false;
      let children = $(`#rec-${editId}`).children()
      $.each(children, (index, value) => {
        if (index < children.length - 2 && index != 0) {
          $(value).attr('contenteditable', false);
          $(value).css("border","1px solid #ddd");
        }
      })
    }

    function addEditing(){
      isEditing = true;
      editId = event.target.parentElement.dataset.id;
      let children = $(`#rec-${editId}`).children()
      $.each(children, (index, value) => {
        if (index < children.length - 2 && index != 0) {
          $(value).attr('contenteditable', true);
          $(value).css("border","5px solid #99caff");
        }
      })
    }

    $(".canBeEditable").on("input",(e)=> {
      let text = $(e.target).text()
      let id = $(e.target).parent().data("id");
      let obj = {};
      let key = $(e.target).attr('id').substr(4)
      obj[key] = text;

      $(e.target).siblings().each((index, sib)=> {
        if(index > 0 && index < 3) {
          obj[$(sib).attr('id').substr(4)] = $(sib).text()
        }
      })

      $.ajax({
        url: `recolector/${id}`,
        type: 'PUT',
        data: obj,
        success: function() {
        }
      })

    });
